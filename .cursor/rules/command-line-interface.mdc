---
description: CLI usage patterns and argument handling
---

# Command Line Interface Patterns

## Main Scraper CLI ([nms_wiki_scraper.py](mdc:nms_wiki_scraper.py))

### Information Commands
- `--list-categories` - Show all predefined game categories
- `--list-groups` - Show category group mappings

### Scraping Configuration
- `--categories [cat1 cat2 ...]` - Scrape specific categories (expands to related categories in same group)
- `--database path` - SQLite database path (default: nms_data.db)
- `--delay seconds` - Delay between requests (default: 1.0)
- `--limit number` - Max items per category (default: 500)

### Usage Examples
```bash
# Scrape all predefined categories
python nms_wiki_scraper.py

# Scrape specific categories with custom settings
python nms_wiki_scraper.py --categories "Raw Materials" "Technology" --delay 0.5 --limit 100

# List available options
python nms_wiki_scraper.py --list-categories
```

## Export CLI ([nms_export.py](mdc:nms_export.py))

### Export Commands
- `--database path` - Source SQLite database (default: nms_data.db)
- `--output-dir path` - Output directory for JSON files (default: data)
- `--groups [group1 group2 ...]` - Export specific groups only
- `--list-groups` - Show available groups in database

### Usage Examples
```bash
# Export all groups to JSON
python nms_export.py

# Export specific groups
python nms_export.py --groups rawMaterials technology

# Export to custom directory
python nms_export.py --output-dir exports
```

## Progress Reporting
Both scripts provide detailed progress reporting with:
- Emoji indicators for different operations (üìÅ, ‚úÖ, ‚ùå, üìä)
- Progress counters and percentages
- Summary statistics at completion
- Error logging with context